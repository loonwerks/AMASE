package Sender
public
with Datatypes;
	system Sender
		features
			in1 : in data port Datatypes::commBus.impl;
			in2 : in data port Datatypes::commBus.impl;
			
			sender_out : out data port Datatypes::commBus.impl;
		
		annex agree {** 
			
			guarantee "Sender behavior." :
				sender_out.NODE_VAL = (in1.NODE_VAL + in2.NODE_VAL);
			
		**}; 
		
		annex safety {**

			fault Sender_Fault_1 "Output field is zero": Fault_Library.fail_to_real {
				inputs: val_in <- sender_out.NODE_VAL, alt_val <- 0.0;     
				outputs: sender_out.NODE_VAL <- val_out;    
				duration: permanent;
				propagate_type: asymmetric;
			}

			fault Sender_Fault_2 "Datatype output is zero": Fault_Library.nested_fault {
				inputs: val_in <- sender_out, alt_val <- 0.0;     
				outputs: sender_out <- val_out;    
				duration: permanent;
				propagate_type: asymmetric;
			}
				
		**};
		
	end Sender;
end Sender;