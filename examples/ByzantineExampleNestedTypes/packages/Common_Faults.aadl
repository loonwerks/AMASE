package Common_Faults
public
	with Datatypes;
	
	annex agree {**
	    node invert_signal(val_in: bool, trigger: bool) returns (val_out:bool);
		let
	  		val_out = if trigger then (not val_in) else val_in;
		tel;
		
		node fail_to_zero(val_in: int, trigger: bool) returns (val_out: int);
		let
			val_out = if trigger then (0) else val_in;
		tel;
		
		node fail_to_one(val_in: int, trigger: bool) returns (val_out: int);
		let
			val_out = if trigger then (1) else val_in;
		tel;
		
		node fail_to_real(val_in: real, alt_val: real, trigger: bool) returns	(val_out: real);
		let
			val_out = if trigger then alt_val else val_in;
		tel;	
		
		node nested_test (val_in: Datatypes::commBus.impl, alt_val: real, trigger: bool) returns (val_out: Datatypes::commBus.impl); 
		let
	   		val_out = if (trigger) then (val_in{NODE_VAL := alt_val}) else val_in;
		tel;
		
**};
end Common_Faults;