 package Nodes
public
with Base_Types;
with Buses;
	system Node
		features
			sensor_input : in data port Base_Types::Boolean;
			output : out data port Buses::commBus.bool;
			
			in1 : in data port Buses::commBus.bool;
			in2 : in data port Buses::commBus.bool;
			in3 : in data port Buses::commBus.bool;
			
			report_to_top : out data port Base_Types::Boolean;
			
		annex agree {**
			guarantee "Sensor input equals output to bus 1." :
				sensor_input = output.NODE_VAL;
		
			eq score : int = Voting.score(sensor_input) 
							+ Voting.score(in1.NODE_VAL)
							+ Voting.score(in2.NODE_VAL)
							+ Voting.score(in3.NODE_VAL);
		
			guarantee "Report voting conclusion to top level." :
				if (score > 2) then (report_to_top = true) else (report_to_top = false);
			
			
		**};
		
		annex safety {**
			
			fault Node_Fault "Node output is asymmetric": Common_Faults.invert_signal {
				inputs: val_in <- output.NODE_VAL;     
				outputs: output.NODE_VAL <- val_out;    
				duration: permanent;
				propagate_type: asymmetric;
			}
			
		**};
	end Node;
end Nodes;