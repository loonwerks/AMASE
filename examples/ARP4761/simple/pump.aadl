package pump


public

with common;
with ARP4761;
with EMV2;
with base_types;
with faults;

system pump
features
	pressure_output : out data port common::pressure.i;
	stuck_at_occurred: in data port Base_Types::Boolean;

--annex safety {**
--	eq val = 9;
--**};	
annex AGREE {**
	
	-- 
	eq nominal_pressure_output : common::pressure.i;
	-- Used to show nondeterministic or stuck_at failure
	eq alt_val : common::pressure.i; 
	
	-- There should be some pressure always coming through
	-- the lines.  
	guarantee "Pump always outputs something" : nominal_pressure_output.val > 0.0 ;
	
	-- guarantee mapping output (fail_to) pump
	 guarantee "Output failure binding for pump (fail_to)" : 
	    pressure_output.val = faults.fail_to(nominal_pressure_output.val, alt_val.val, stuck_at_occurred);	
**}	;



annex EMV2 {**
	use types error_library;
	use behavior error_library::simple;
	
	error propagations
		pressure_output : out propagation{NoService};
	flows
		nopressure : error source pressure_output{NoService};
	end propagations;
	
	component error behavior
	events
		HydraulicError : error event;
	transitions
		t1 : Operational -[ HydraulicError]-> Failed;
	propagations
		p1     : Failed 		-[]-> pressure_output{Noservice};
		normal : Operational 	-[]-> pressure_output{NoError};
	end component;
	
	properties
		EMV2::severity => ARP4761::Major applies to HydraulicError;
		EMV2::likelihood => ARP4761::Probable applies to HydraulicError;
		EMV2::hazards => 
			([	crossreference => "ARP4761 page 275 figure L9";
				failure => "Hydraulic Error on a pump";
				phases => ("TBD");
				description => "Loss of one pump";
				comment => "Major hazard if both pumps are lost";
			])
			applies to HydraulicError;
		-- EMV2::OccurrenceDistribution => [ ProbabilityValue => 1.20e-4 ; Distribution => Fixed;] applies to HydraulicError, pressure_output.NoService;
		EMV2::OccurrenceDistribution => [ ProbabilityValue => 2.5e-5 ; Distribution => Poisson;] applies to HydraulicError, pressure_output.NoService;
		
**};
end pump;


system implementation pump.i
end pump.i;

end pump;
