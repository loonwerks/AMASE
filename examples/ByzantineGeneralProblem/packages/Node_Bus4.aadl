package Node_Bus4
public
with Base_Types;
with Buses;

	system node4
		features
			sensor_input: in data port Base_Types::Float;
			bus1_input: in data port Buses::commBus.real;
			bus2_input: in data port Buses::commBus.real;
			bus3_input: in data port Buses::commBus.real;
				
			output: out data port Buses::commBus.real;
				
		annex agree {**
			assume "Sensor input bounded between 0 and 10.":
				((sensor_input > 0.0) and (sensor_input < 10.0));
			
			guarantee "Sensor input equals output to bus 4." :
				sensor_input = output.NODE_VAL;
			
		**};
--		annex safety {**
--			fault Node4_Fault "Asym output node 4": Common_Faults.fail_to_real {
--				eq fail_to : real;
--				inputs: val_in <- output.NODE_VAL, alt_val <- fail_to;     
--				outputs: output.NODE_VAL <- val_out;    
--				duration: permanent;
--				propagate_type: asymmetric;
--			}
--		**};
	end node4;
end Node_Bus4;