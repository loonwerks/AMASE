package PedalSensor
public
with Base_Types;
with faults;

	system SensorPedalPosition
		features
			-- Input
			mech_pedal_pos : in data port Base_Types::Boolean;
			-- Output
			elec_pedal_pos : out data port Base_Types::Boolean;
			
			
		annex agree {**
				
				-- pedal_position_translation_norm_guarantee := (TRUE ->  G (mechanical_pedal_pos <-> electrical_pedal_pos));
				guarantee "(SensorPedalPosition) mechanical pedal position is equivalent to electrical pedal position." :
					true -> mech_pedal_pos <=> elec_pedal_pos;
				
		**};
			
		annex safety {**
			fault SensorPedalPosition_ErroneousData "(SensorPedalPosition) Inverted boolean fault." : faults::inverted_fail {
				inputs: val_in <- elec_pedal_pos; 
				outputs: elec_pedal_pos <- val_out;    
        		probability: 1.0E-2 ;
				duration: permanent;
			}
			
		
		**};
	end SensorPedalPosition;
end PedalSensor;