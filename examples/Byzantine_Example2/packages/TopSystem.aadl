package TopSystem
public
with Base_Types;
with Sender;
with Receiver;
with Comm;
renames Base_Types::all;
renames Sender::all;
renames Receiver::all;
renames Comm::all;

	system TopSystem
		features
			input: in data port Boolean;
			output1: out data port Boolean;
			output2: out data port Boolean;
		
		annex agree {**
				
			guarantee "output1 equals output2":
			(output1 = output2);
			
			
		**};
			
	end TopSystem;
	
	system implementation TopSystem.impl
		subcomponents
			Sender : system Sender;
			Comm1: system Comm;
			Comm2: system Comm;
			receiver1 : system Receiver;
			receiver2 : system Receiver;
			
		connections
			in_to_sender : port input -> sender.input;
			sender_to_comm1: port sender.output -> comm1.input;
			sender_to_comm2: port sender.output -> comm2.input;
			comm1_to_receiver1: port comm1.output -> receiver1.input;
			comm2_to_receiver2: port comm2.output -> receiver2.input;			
			receiver1_to_out: port receiver1.output -> output1;
			receiver2_to_out: port receiver2.output -> output2;
		
		annex safety {**
      		analyze : max 1 fault
      		propagate_from:
      		{Sender_Fault@Sender.Sender} to {Comm_Fault@Comm.Comm};
   		**};
			
	end TopSystem.impl;
end TopSystem;