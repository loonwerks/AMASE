package MonitorSystem
public
with Base_Types;

	system MonitorSystem
		features
			-- Inputs
			power : in data port Base_Types::Boolean; 
			ground_speed : in data port Base_Types::Integer;
			
			electrical_pedal_pos_L : in data port Base_Types::Boolean;
			electrical_pedal_pos_R : in data port Base_Types::Boolean; 
			
			wheel_rolling_1 : in data port Base_Types::Boolean;
			wheel_rolling_2 : in data port Base_Types::Boolean;  
			wheel_rolling_3 : in data port Base_Types::Boolean;
			wheel_rolling_4 : in data port Base_Types::Boolean;
			wheel_rolling_5 : in data port Base_Types::Boolean; 
			wheel_rolling_6 : in data port Base_Types::Boolean;
			wheel_rolling_7 : in data port Base_Types::Boolean;
			wheel_rolling_8 : in data port Base_Types::Boolean;
			
			brake_as_cmd_1 : in data port Base_Types::Boolean;
			brake_as_cmd_2 : in data port Base_Types::Boolean;
			brake_as_cmd_3 : in data port Base_Types::Boolean;
			brake_as_cmd_4 : in data port Base_Types::Boolean;
			brake_as_cmd_5 : in data port Base_Types::Boolean;
			brake_as_cmd_6 : in data port Base_Types::Boolean;
			brake_as_cmd_7 : in data port Base_Types::Boolean;
			brake_as_cmd_8 : in data port Base_Types::Boolean;
			
			as_cmd_pair_1_5 : in data port Base_Types::Boolean; 
			as_cmd_pair_2_6 : in data port Base_Types::Boolean;
			as_cmd_pair_3_7 : in data port Base_Types::Boolean;
			as_cmd_pair_4_8 : in data port Base_Types::Boolean;
			
			-- Output
			bscu_validity : out data port Base_Types::Boolean;
		
		annex agree {** 
			
			assume "(MonitorSystem) Ground speed always greater than zero." : 
					(ground_speed >= 0) and (ground_speed <= 10);
			

			-- BSCU Validity
			property SPEED = ground_speed > 0;
			property PAIR_ROLL_15 = wheel_rolling_1 and wheel_rolling_5;
			property PAIR_ROLL_26 = wheel_rolling_2 and wheel_rolling_6;
			property PAIR_ROLL_37 = wheel_rolling_3 and wheel_rolling_7;
			property PAIR_ROLL_48 = wheel_rolling_4 and wheel_rolling_8;

			-- Original guarantee			
--			guarantee "(MonitorSystem) 1 BSCU valid contract." : 
--					true -> (bscu_validity <=>
--						  (power) 
--					  and ((elec_pedal_pos_L and ((SPEED and wheel_rolling_1) or (not SPEED))) <=> brake_as_cmd_1)
--					  and ((elec_pedal_pos_L and ((SPEED and wheel_rolling_2) or (not SPEED))) <=> brake_as_cmd_2)
--					  and ((elec_pedal_pos_R and ((SPEED and wheel_rolling_3) or (not SPEED))) <=> brake_as_cmd_3)
--					  and ((elec_pedal_pos_R and ((SPEED and wheel_rolling_4) or (not SPEED))) <=> brake_as_cmd_4)
--					  and ((elec_pedal_pos_L and ((SPEED and wheel_rolling_5) or (not SPEED))) <=> brake_as_cmd_5)
--					  and ((elec_pedal_pos_L and ((SPEED and wheel_rolling_6) or (not SPEED))) <=> brake_as_cmd_6)
--					  and ((elec_pedal_pos_R and ((SPEED and wheel_rolling_7) or (not SPEED))) <=> brake_as_cmd_7)
--					  and ((elec_pedal_pos_R and ((SPEED and wheel_rolling_8) or (not SPEED))) <=> brake_as_cmd_8))
--					  and ((SPEED and (not PAIR_ROLL_15)) <=> as_cmd_pair_1_5)
--					  and ((SPEED and (not PAIR_ROLL_26)) <=> as_cmd_pair_2_6)
--					  and ((SPEED and (not PAIR_ROLL_37)) <=> as_cmd_pair_3_7)
--					  and ((SPEED and (not PAIR_ROLL_48)) <=> as_cmd_pair_4_8);

			-- ltl2lustre guarantee
			guarantee "(MonitorSystem) 1 BSCU valid contract." :
				(true => (bscu_validity = 
					((((((((((((power and ((electrical_pedal_pos_L and (((ground_speed > 0) and wheel_rolling_1) or (ground_speed = 0))) = brake_as_cmd_1)) and ((electrical_pedal_pos_L and (((ground_speed > 0) and wheel_rolling_2) or (ground_speed = 0))) = brake_as_cmd_2)) and ((electrical_pedal_pos_R and (((ground_speed > 0) and wheel_rolling_3) or (ground_speed = 0))) = brake_as_cmd_3)) and ((electrical_pedal_pos_R and (((ground_speed > 0) and wheel_rolling_4) or (ground_speed = 0))) = brake_as_cmd_4)) and ((electrical_pedal_pos_L and (((ground_speed > 0) and wheel_rolling_5) or (ground_speed = 0))) = brake_as_cmd_5)) and ((electrical_pedal_pos_L and (((ground_speed > 0) and wheel_rolling_6) or (ground_speed = 0))) = brake_as_cmd_6)) and ((electrical_pedal_pos_R and (((ground_speed > 0) and wheel_rolling_7) or (ground_speed = 0))) = brake_as_cmd_7)) and ((electrical_pedal_pos_R and (((ground_speed > 0) and wheel_rolling_8) or (ground_speed = 0))) = brake_as_cmd_8)) and (((ground_speed > 0) and ((not wheel_rolling_1) or (not wheel_rolling_5))) = as_cmd_pair_1_5)) and (((ground_speed > 0) and ((not wheel_rolling_2) or (not wheel_rolling_6))) = as_cmd_pair_2_6)) and (((ground_speed > 0) and ((not wheel_rolling_3) or (not wheel_rolling_7))) = as_cmd_pair_3_7)) and (((ground_speed > 0) and ((not wheel_rolling_4) or (not wheel_rolling_8))) = as_cmd_pair_4_8))
				));
		

			
			guarantee "(MonitorSystem) If we have no power, bscu is not valid":
					true -> (not power => not bscu_validity);
										
		**}	;
		
		annex safety {**
			fault MonitorSystem_ErroneousData "(MonitorSystem) Inverted boolean fault: sys validity incorrect." : faults.inverted_fail {
				inputs: val_in <- bscu_validity; 
				outputs: bscu_validity <- val_out;    
        		probability: 8.0E-7 ;
				duration: permanent;
			}
			
		**};
	end MonitorSystem;
	
	system implementation MonitorSystem.inst
		
	end MonitorSystem.inst;
end MonitorSystem;



--    -- ===============================================================================
--    MODULE MonitorSystem(power, electrical_pedal_pos_L, electrical_pedal_pos_R, ground_speed, wheel_rolling_1, wheel_rolling_2, wheel_rolling_3, wheel_rolling_4, wheel_rolling_5, wheel_rolling_6, wheel_rolling_7, wheel_rolling_8, brake_as_cmd_1, brake_as_cmd_2, brake_as_cmd_3, brake_as_cmd_4, brake_as_cmd_5, brake_as_cmd_6, brake_as_cmd_7, brake_as_cmd_8, as_cmd_pair_1_5, as_cmd_pair_2_6, as_cmd_pair_3_7, as_cmd_pair_4_8)
--        VAR
--            bscu_validity : boolean;
--            LTLSPEC NAME bscu_validity_norm_guarantee := 
--               (TRUE ->  G (bscu_validity <-> ((((((((((((power & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_1) | ground_speed = 0)) <-> brake_as_cmd_1)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_2) | ground_speed = 0)) <-> brake_as_cmd_2)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_3) | ground_speed = 0)) <-> brake_as_cmd_3)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_4) | ground_speed = 0)) <-> brake_as_cmd_4)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_5) | ground_speed = 0)) <-> brake_as_cmd_5)) & ((electrical_pedal_pos_L & ((ground_speed > 0 & wheel_rolling_6) | ground_speed = 0)) <-> brake_as_cmd_6)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_7) | ground_speed = 0)) <-> brake_as_cmd_7)) & ((electrical_pedal_pos_R & ((ground_speed > 0 & wheel_rolling_8) | ground_speed = 0)) <-> brake_as_cmd_8)) & ((ground_speed > 0 & (!wheel_rolling_1 | !wheel_rolling_5)) <-> as_cmd_pair_1_5)) & ((ground_speed > 0 & (!wheel_rolling_2 | !wheel_rolling_6)) <-> as_cmd_pair_2_6)) & ((ground_speed > 0 & (!wheel_rolling_3 | !wheel_rolling_7)) <-> as_cmd_pair_3_7)) & ((ground_speed > 0 & (!wheel_rolling_4 | !wheel_rolling_8)) <-> as_cmd_pair_4_8))));
--
--        DEFINE
--        	as_cmd_pair_1_5_valid:= ((ground_speed>0 & (!wheel_rolling_1 | !wheel_rolling_5)) <-> as_cmd_pair_1_5);
--        	as_cmd_pair_2_6_valid:= ((ground_speed>0 & (!wheel_rolling_2 | !wheel_rolling_6)) <-> as_cmd_pair_2_6);
--        	as_cmd_pair_3_7_valid:= ((ground_speed>0 & (!wheel_rolling_3 | !wheel_rolling_7)) <-> as_cmd_pair_3_7);
--        	as_cmd_pair_4_8_valid:= ((ground_speed>0 & (!wheel_rolling_4 | !wheel_rolling_8)) <-> as_cmd_pair_4_8);
--        	brake_as_cmd_1_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_1) | ground_speed=0)) <-> brake_as_cmd_1);
--        	brake_as_cmd_2_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_2) | ground_speed=0)) <-> brake_as_cmd_2);
--        	brake_as_cmd_3_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_3) | ground_speed=0)) <-> brake_as_cmd_3);
--        	brake_as_cmd_4_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_4) | ground_speed=0)) <-> brake_as_cmd_4);
--        	brake_as_cmd_5_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_5) | ground_speed=0)) <-> brake_as_cmd_5);
--        	brake_as_cmd_6_valid:= (( electrical_pedal_pos_L & ((ground_speed>0 & wheel_rolling_6) | ground_speed=0)) <-> brake_as_cmd_6);
--        	brake_as_cmd_7_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_7) | ground_speed=0)) <-> brake_as_cmd_7);
--        	brake_as_cmd_8_valid:= (( electrical_pedal_pos_R & ((ground_speed>0 & wheel_rolling_8) | ground_speed=0)) <-> brake_as_cmd_8);
--
--
--        ASSIGN
--            bscu_validity := power 
--            			& as_cmd_pair_1_5_valid 
--            			& as_cmd_pair_2_6_valid 
--            			& as_cmd_pair_3_7_valid 
--            			& as_cmd_pair_4_8_valid 
--            			& brake_as_cmd_1_valid 
--            			& brake_as_cmd_2_valid 
--            			& brake_as_cmd_3_valid 
--            			& brake_as_cmd_4_valid 
--            			& brake_as_cmd_5_valid 
--            			& brake_as_cmd_6_valid
--            			& brake_as_cmd_7_valid 
--            			& brake_as_cmd_8_valid
--            			;
--
--    -- ===============================================================================
--    --                               End of module
--    -- ===============================================================================
