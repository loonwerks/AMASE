package MeterValve
public
with Base_Types;

	system MeterValve
		features
			-- Inputs
			elec_cmd : in data port Base_Types::Boolean;
			mech_cmd : in data port Base_Types::Boolean;
			hyd_pressure_in : in data port Base_Types::Integer;
			
			-- Outputs
			hyd_pressure_out : out data port Base_Types::Integer;
			
			
			-- FOR AGREE:
			-- all mech commands coming in are false in wbs_arch4
			
			annex agree {**
				
				--assume "Pressure input from 0 to 10 inclusive" : true -> (hyd_pressure_in >= 0 and hyd_pressure_in <= 10);
				
				-- apply_command_norm_guarantee := (TRUE ->  G (((elec_cmd | mech_cmd) & hyd_pressure_in > 0) <-> hyd_pressure_out > 0));
				
				guarantee "(MeterValve) Hydraulic pressure out is positive if and only if
				 we have either electrical or mechanical command and positive pressure." :
					true -> (((elec_cmd or mech_cmd) and hyd_pressure_in > 0) <=> hyd_pressure_out > 0);
				
				--guarantee "(MeterValve) Pressure out 8 bounded." : true -> (hyd_pressure_out <= 10 and hyd_pressure_out >= 0);	
			**};
			
	end MeterValve;
	
	system implementation MeterValve.inst
		
	end MeterValve.inst;
end MeterValve;