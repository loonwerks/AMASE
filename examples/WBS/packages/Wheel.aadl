package Wheel
public
with Base_Types;
with datatypes;

	system Wheel
		features
			-- Input 
			-- ground speed from top level ctrl_sys 
			ground_speed : in data port Base_Types::Integer;
			-- braking force from wheel_brake component
			brake_force : in data port Base_Types::Integer;
			
			-- Outputs 
			-- Should be enumerated type: {stopped, rolling}
			wheel_status : out data port datatypes::WheelStatus;
			
			annex agree {**
				
				-- braking_behavior_norm_guarantee := 
				--   (TRUE -> G
	   			--		  (((braking_force > 8 & ground_speed > 1) -> next(status) = stopped) 
				--		&  ((braking_force <= 8 & ground_speed > 1) -> next(status) = rolling))) 
				--		&  (ground_speed < 2 -> next(status) = stopped)));
				
			**};
			
	end Wheel;
	
	system implementation Wheel.inst
		
	end Wheel.inst;

end Wheel;