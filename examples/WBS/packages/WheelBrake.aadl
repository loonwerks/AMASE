package WheelBrake
public
with Base_Types;
	
	system WheelBrake
		features
			-- Input from physical system
			normal_hyd_pressure_in : in data port Base_Types::Integer;
			alt_hyd_pressure_in : in data port Base_Types::Integer;
			-- Output 
			brake_force : out data port Base_Types::Integer;
			
	end WheelBrake;
	
	system implementation WheelBrake.inst
		subcomponents
			normal_hyd_fuse : system HydraulicFuse.inst;
			normal_hyd_piston : system HydraulicPiston.inst;
			alt_hyd_fuse : system HydraulicFuse.inst;
			alt_hyd_piston : system HydraulicPiston.inst;
			brake_actuator : system BrakeActuator.inst;
			
		connections
			-- To normal hyd fuse
			norm_pressure_to_fuse : port normal_hyd_pressure_in -> normal_hyd_fuse.hyd_pressure_in;
			-- To normal piston
			norm_fuse_to_piston : port normal_hyd_fuse.hyd_pressure_out ->  normal_hyd_piston.hyd_pressure_in;
			-- alt hyd fuse
			pressure_to_alt_fuse : port alt_hyd_pressure_in -> alt_hyd_fuse.hyd_pressure_in;
			-- To alt piston
			alt_fuse_to_piston : port alt_hyd_fuse.hyd_pressure_out -> alt_hyd_piston.hyd_pressure_in;
			-- brake actuator
			normal_force_to_actuator : port normal_hyd_piston.force_out -> brake_actuator.normal_force_in;
			alt_force_to_actuator : port alt_hyd_piston.force_out -> brake_actuator.alternate_force_in;
			
			-- Braking force
			brake_force_out : port brake_actuator.braking_force -> brake_force;
			
	end WheelBrake.inst;
	

	system HydraulicFuse
		features
			-- Inputs
			hyd_pressure_in : in data port Base_Types::Integer;
			--Output 
			hyd_pressure_out : out data port Base_Types::Integer;
	end HydraulicFuse;
	
	system implementation HydraulicFuse.inst
		
	end HydraulicFuse.inst;
	
	
	system HydraulicPiston
		features
			-- Inputs
			hyd_pressure_in : in data port Base_Types::Integer;
			--Output 
			force_out : out data port Base_Types::Integer;
		
	end HydraulicPiston;
	
	system implementation HydraulicPiston.inst
		
	end HydraulicPiston.inst;
	
	system BrakeActuator
		features
			-- Inputs
			normal_force_in : in data port Base_Types::Integer;
			alternate_force_in : in data port Base_Types::Integer;
			
			-- Output
			braking_force : out data port Base_Types::Integer;
	end BrakeActuator;
	
	system implementation BrakeActuator.inst
		
	end BrakeActuator.inst;
	
end WheelBrake;