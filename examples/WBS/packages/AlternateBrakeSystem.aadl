package AlternateBrakeSystem
public
with MeterValve;
with Base_Types;

	system AlternateBrakeSystem
		features
			-- Inputs
			hyd_pressure_in : in data port Base_Types::Integer; 
			mech_pedal_pos_L : in data port Base_Types::Boolean;
			mech_pedal_pos_R : in data port Base_Types::Boolean;
			as_cmd_pair_1_5 : in data port Base_Types::Boolean;
			as_cmd_pair_2_6 : in data port Base_Types::Boolean;
			as_cmd_pair_3_7 : in data port Base_Types::Boolean;
			as_cmd_pair_4_8 : in data port Base_Types::Boolean;
			
			-- Outputs (to meter valves and antiskid shutoff valves)
			hyd_pressure_out1 : out data port Base_Types::Integer;
			hyd_pressure_out2 : out data port Base_Types::Integer;
			hyd_pressure_out3 : out data port Base_Types::Integer;
			hyd_pressure_out4 : out data port Base_Types::Integer;
			
	end AlternateBrakeSystem;
	
	system implementation AlternateBrakeSystem.inst
		subcomponents
			mv1 : system MeterValve::MeterValve.inst;
			mv2 : system MeterValve::MeterValve.inst;
			mv3 : system MeterValve::MeterValve.inst;
			mv4 : system MeterValve::MeterValve.inst;
			as_shutoff1 : system AntiskidShutoffValve;
			as_shutoff2 : system AntiskidShutoffValve;
			as_shutoff3 : system AntiskidShutoffValve;
			as_shutoff4 : system AntiskidShutoffValve;
	end AlternateBrakeSystem.inst;
	
	
	system AntiskidShutoffValve
		features
			-- Inputs (from alternate system)
			antiskid_cmd : in data port Base_Types::Boolean;
			hyd_pressure_in : in data port Base_Types::Integer;
			
			-- Outputs 
			-- pressure out goes to meter valve
			hyd_pressure_out : out data port Base_Types::Integer;
	end AntiskidShutoffValve;
	
end AlternateBrakeSystem;